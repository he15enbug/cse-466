#!/usr/bin/env python

def str2arr(s):
    return [int(x, 16) for x in s.split()]

def arr2printf_str(arr):
    res = ''
    for i in arr:
        res = res + '\\x{:02x}'.format(i)
    return res

def z_sub(arr1, arr2):
    l = len(arr2)
    res = []
    for i in range(0, l):
        x = arr1[i] - arr2[i]
        if(x < 0):
            x += 256
        res.append(x)
    return res

def babyrev_lv20_0():
    add_nums_str = '''
        0xed 0x7b 0x56 0x2a 0x5e 0xeb 0x72 0x79
        0x6c 0x1a 0x76 0xc9 0x94 0x6 0xd3 0x29 0xd3 0xb5 0x7b 0x31 0x4f
    '''
    add_nums = str2arr(add_nums_str)
    key_str = '''
        0x2e    0xfa    0x47    0xf1    0xfe    0x20    0x14    0x4e
        0x52    0x1b    0xef    0x66    0x31    0xdd    0x58    0x71
        0x11    0xe8    0x5b    0x17    0x23
    '''
    key = str2arr(key_str)
    in_arr = z_sub(key, add_nums)
    print(arr2printf_str(in_arr))

def babyrev_lv20_1():
    add_nums_str = '''
        0x96 0xdb 0x3b 0x60 0x61 0x0f 0x9b 0x1d
        0x08 0x68 0xcd 0x24 0xa2 0xa3 
    '''
    add_nums = str2arr(add_nums_str)
    key_str = '''
        0xfa    0x45    0x3e    0xa9    0xdb    0x9c    0x0b    0xfc
        0xa1    0x9c    0xc6    0x44    0xac    0xbd
    '''
    key = str2arr(key_str)
    in_arr = z_sub(key, add_nums)
    print(arr2printf_str(in_arr))
